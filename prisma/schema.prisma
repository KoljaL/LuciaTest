generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// model User {
//   id              String    @id @unique @default(cuid())
//   provider_id     String    @unique
//   hashed_password String?
//   username        String?   @unique
//   session         Session[]

//   @@map("user")
// }

// model Session {
//   id           String @id @unique
//   user_id      String
//   expires      BigInt
//   idle_expires BigInt
//   user         User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

//   @@index([user_id])
//   @@map("session")
// }

model User {
  id              String    @id @unique @default(cuid())
  provider_id     String    @unique
  hashed_password String?
  username        String?   @unique
  email           String?   @unique
  session         Session[]
  Topic           Topic[]
  Comment         Comment[]
  comment_count   Int?      @default(0)
  topic_count     Int?      @default(0)

  @@map("user")
}

model Session {
  id           String @id @unique
  user_id      String
  expires      BigInt
  idle_expires BigInt
  user         User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  Topics      Topic[]
}

model Topic {
  id            Int       @id @default(autoincrement())
  title         String
  slug          String    @unique
  user_id       String
  user          User      @relation(references: [id], fields: [user_id], onDelete: Cascade)
  private       Boolean   @default(false)
  tags          String
  content       String
  excerp        String
  created       BigInt
  Comment       Comment[]
  comment_count Int
  Category      Category? @relation(fields: [category_id], references: [id])
  category_id   Int?
}

model Comment {
  id       Int    @id @default(autoincrement())
  created  BigInt
  parent   Int
  user_id  String
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  topic_id Int
  topic    Topic? @relation(fields: [topic_id], references: [id], onDelete: Cascade)
}

model Tag {
  id          Int    @id @default(autoincrement())
  name        String
  slug        String
  description String
  count       Int
}
